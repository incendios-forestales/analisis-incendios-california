---
title: "Análisis de datos de incendios forestales en California"
author: "Mariela Alvarado, Manuel Vargas"
date: "2025-09-12"
format: html
toc: true
lang: es
theme: cosmo
---

# Introducción

Los incendios forestales representan una de las amenazas medioambientales más críticas del siglo XXI. Además de destruir ecosistemas y biodiversidad, estos eventos comprometen la salud pública, la seguridad de las comunidades y la estabilidad económica, lo que evidencia la urgente necesidad de herramientas analíticas que permitan comprender y mitigar su impacto. Mediante técnicas de procesamiento y análisis espacial de datos geográficos, el presente estudio se enfoca en la incidencia de incendios forestales como una manifestación del cambio climático. A través del lenguaje de programación R, se desarrolló un sistema de visualización e interpretación geoespacial que integra datos vectoriales y ráster. El análisis se centró en el estado de California, Estados Unidos, una región particularmente vulnerable a eventos extremos asociados al calentamiento global.

Este documento presenta un análisis exploratorio de los datos de incendios forestales facilitados por el [Departamento de Silvicultura y Protección contra Incendios de California (CAL FIRE)](https://www.fire.ca.gov/), a los cuales se les unieron datos de temperatura provenientes del [Reanálisis atmosférico de quinta generación del ECMWF (ERA5)](https://cds.climate.copernicus.eu/).

```{r}
#| label: cargar-bibliotecas
#| warning: false
#| message: false
#| code-fold: true
#| echo: false

library(tidyverse)
library(tibble)
library(lubridate)
library(DT)
library(plotly)
library(scales)
library(terra)
library(tmap)
library(leaflet)
library(RColorBrewer)
```

```{r}
#| label: definir-cortes-anios
#| echo: false

cortes_anios <- 
  c(1961, 1965, 1970, 1975, 1980, 1985, 1990, 
    1995, 2000, 2005, 2010, 2015, 2020, 2024)

lim_x <- range(cortes_anios)
```

```{r}
#| label: cargar-datos-incendios
#| warning: false
#| message: false
#| code-fold: true
#| echo: false

# Leer archivo
incendios <- read_csv("datos/incendios_ca_2m_temperature_mean_ca_diaria_1960-2024.csv")

# Eliminar incendios que no tienen ALARM_DATE
incendios <-
  incendios |>
  drop_na(ALARM_DATE)

# Convertir acres a hectáreas (1 acre = 0.40468564224 hectáreas)
incendios <- 
  incendios |>
  mutate(GIS_HA = as.numeric(GIS_ACRES) * 0.40468564224)

# Incendios agrupados por año
incendios_por_anio <-
  incendios |>
  mutate(
    anio = year(ALARM_DATE)
  ) |>
  filter(anio >= 1961 & anio <= 2024) |>
  group_by(anio) |>
  summarise(
    n                                         = n(),
    area_quemada_total                        = sum(GIS_HA, na.rm = TRUE),
    temperatura_2m_promedio_hora_fecha_alarma = mean(
      TEMPERATURE_2M_ALARM_DATE_MEAN, 
      na.rm                                   = TRUE
    ),
    .groups                                   = "drop"
  )

# Incendios agrupados por año y mes
incendios_por_anio_mes <-
  incendios |>
  mutate(
    anio = year(ALARM_DATE),
    mes  = month(ALARM_DATE, label = TRUE, abbr = TRUE)
  ) |>
  group_by(anio, mes) |>
  summarise(
    n                                         = n(),
    area_quemada_total                        = sum(GIS_HA, na.rm = TRUE),
    temperatura_2m_promedio_hora_fecha_alarma = mean(
      TEMPERATURE_2M_ALARM_DATE_MEAN, 
      na.rm = TRUE
    ),
    .groups                                   = "drop"
  )

# Asegurar que los meses queden en orden enero-diciembre
incendios_por_anio_mes$mes <- factor(
  incendios_por_anio_mes$mes,
  levels = month(ymd("2025-01-01") + months(0:11), label = TRUE, abbr = TRUE)
)

# Traducir las abreviaturas de los meses a español
incendios_por_anio_mes <-
  incendios_por_anio_mes |>
    mutate(
      mes = factor(
        mes,
        levels = month.abb,
        labels = c("Ene", "Feb", "Mar", "Abr", "May", "Jun",
                   "Jul", "Ago", "Sep", "Oct", "Nov", "Dic")
      )
    )
```

```{r}
#| label: cargar-datos-variables-climaticas-12m
#| warning: false
#| message: false
#| code-fold: true
#| echo: false

# Temperatura del aire a 2m
temperature_2m_12m <- rast("2m_temperature_ca_promedio_1960-2024-12m.tif")
# Temperatura de la superficie del suelo
skin_temperature_12m <- rast("skin_temperature_ca_promedio_1960-2024-12m.tif")
# Temperatura del suelo en el nivel 1 (0 - 7 cm)
soil_temperature_level_1_12m <- rast("soil_temperature_level_1_ca_promedio_1960-2024-12m.tif")
# Precipitación total
total_precipitation_12m <- rast("total_precipitation_ca_promedio_1960-2024-12m.tif")
# Velocidad del viento a 10 m
wind_speed_10m_12m <- rast("wind_speed_kmh_10m_promedio_1960-2024.tif")
# Índice de área foliar (LAI) – vegetación baja
lai_low_vegetation_12m <- rast("leaf_area_index_low_vegetation_ca_promedio_1960-2024-12m.tif")

# Renombrar las capas de las variables climáticas
nombres_capas_variables_climaticas <- c(
  "1960", "1961", "1962", "1963", "1964",
  "1965", "1966", "1967", "1968", "1969",
  "1970", "1971", "1972", "1973", "1974",
  "1975", "1976", "1977", "1978", "1979",
  "1980", "1981", "1982", "1983", "1984",
  "1985", "1986", "1987", "1988", "1989",
  "1990", "1991", "1992", "1993", "1994",
  "1995", "1996", "1997", "1998", "1999",
  "2000", "2001", "2002", "2003", "2004", 
  "2005", "2006", "2007", "2008", "2009", 
  "2010", "2011", "2012", "2013", "2014", 
  "2015", "2016", "2017", "2018", "2019", 
  "2020", "2021", "2022", "2023", "2024"
)

names(temperature_2m_12m)           <- nombres_capas_variables_climaticas
names(skin_temperature_12m)         <- nombres_capas_variables_climaticas
names(soil_temperature_level_1_12m) <- nombres_capas_variables_climaticas
names(total_precipitation_12m)      <- nombres_capas_variables_climaticas
names(wind_speed_10m_12m)           <- nombres_capas_variables_climaticas
names(lai_low_vegetation_12m)       <- nombres_capas_variables_climaticas

# Filtrar años
yrs <- as.character(1961:2024)

temperature_2m_12m           <- temperature_2m_12m[[names(temperature_2m_12m)                     %in% yrs]]
skin_temperature_12m         <- skin_temperature_12m[[names(skin_temperature_12m)                 %in% yrs]]
soil_temperature_level_1_12m <- soil_temperature_level_1_12m[[names(soil_temperature_level_1_12m) %in% yrs]]
total_precipitation_12m      <- total_precipitation_12m[[names(total_precipitation_12m)           %in% yrs]]
wind_speed_10m_12m           <- wind_speed_10m_12m[[names(wind_speed_10m_12m)                     %in% yrs]]
lai_low_vegetation_12m       <- lai_low_vegetation_12m[[names(lai_low_vegetation_12m)             %in% yrs]]
```

# Registros de incendios

```{r}
#| label: tabla-incendios
#| code-fold: true

# Definir la tabla DT
t <-
  incendios |>
  select(FIRE_NAME, ALARM_DATE, GIS_HA, TEMPERATURE_2M_ALARM_DATE_MEAN) |>
  arrange(ALARM_DATE) |>
  datatable(
    rownames = FALSE,
    colnames = c("Nombre del incendio", "Fecha de alarma", "Área quemada (ha)", "Temperatura (°C)"),
    options = list(
      pageLength = 10,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    )
  )

# Mostrar la tabla
t
```

# Cantidad de incendios por año

```{r}
#| label: grafico-cantidad-incendios-por-anio
#| warning: false
#| message: false
#| code-fold: true

# Gráfico ggplot2 de líneas + tendencia
g <-
  ggplot(
    incendios_por_anio, 
    aes(
      x = anio, 
      y = n, 
      group = 1,
      text = paste0(
        "Año: ", anio,
        "<br>Cantidad de incendios: ", comma(n)
      )
    )
  ) +
  geom_line(color = "red", linewidth = 1) + # línea principal
  geom_point(color = "red", size = 2) +     # puntos sobre la línea
  geom_smooth(method = "lm", se = FALSE,    # línea de tendencia
              linetype = "dashed", linewidth = 0.8,
              color = "gray30") +
  labs(
    x = "Año",
    y = "Cantidad de incendios"
  ) +
  scale_x_continuous(breaks = cortes_anios, limits = lim_x, minor_breaks = NULL) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
g_interactivo <- ggplotly(g, tooltip = "text") |> config(locale = 'es')

# Mostrar el gráfico
g_interactivo
```

# Área quemada por año

```{r}
#| label: grafico-area-quemada-por-anio
#| warning: false
#| message: false
#| code-fold: true

# Gráfico ggplot2 de líneas + tendencia
g <-
  ggplot(
    incendios_por_anio,
    aes(
      x = anio,
      y = area_quemada_total,
      group = 1,
      text = paste0(
        "Año: ", anio,
        "<br>Área quemada (ha): ", comma(area_quemada_total), " ha"
      )
    )
  ) +
  geom_line(color = "red", linewidth = 1) + # línea principal
  geom_point(color = "red", size = 2) +     # puntos
  geom_smooth(method = "lm", se = FALSE,    # línea de tendencia
              linetype = "dashed", linewidth = 0.8,
              color = "gray30") +
  labs(
    x = "Año",
    y = "Área quemada (ha)"
  ) +
  scale_y_continuous(labels = comma) + # separador de miles en eje Y
  scale_x_continuous(breaks = cortes_anios, limits = lim_x, minor_breaks = NULL) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
g_interactivo <- ggplotly(g, tooltip = "text") |> config(locale = 'es')

# Mostrar el gráfico
g_interactivo
```

# Temperatura promedio por año del sitio del incendio el día de emisión de la alarma

```{r}
#| label: grafico-temperatura-por-anio
#| warning: false
#| message: false
#| code-fold: true

# Gráfico ggplot2 de líneas + tendencia
g <-
  ggplot(
    incendios_por_anio,
    aes(
      x = anio,
      y = temperatura_2m_promedio_hora_fecha_alarma,
      group = 1,
      text = paste0(
        "Año: ", anio,
        "<br>Temperatura promedio: ",
        number(temperatura_2m_promedio_hora_fecha_alarma, accuracy = 0.1), " °C"
      )
    )
  ) +
  geom_line(color = "red", linewidth = 1) + # línea principal
  geom_point(color = "red", size = 2) +     # puntos
  geom_smooth(method = "lm", se = FALSE,    # tendencia lineal
              linetype = "dashed", linewidth = 0.8,
              color = "gray30") +
  labs(
    x = "Año",
    y = "Temperatura promedio (°C)"
  ) +
  scale_y_continuous(labels = number_format(accuracy = 0.1)) +
  scale_x_continuous(breaks = cortes_anios, limits = lim_x, minor_breaks = NULL) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
g_interactivo <- ggplotly(g, tooltip = "text") |> config(locale = 'es')

# Mostrar gráfico interactivo
g_interactivo
```

# Promedio de temperatura por año

```{r}
#| label: grafico-2m-temperature-promedio-por-anio
#| code-fold: true
#| warning: false
#| message: false

# Promedio espacial anual (una media por capa)
vals <- drop(terra::global(temperature_2m_12m, mean, na.rm = TRUE)[, 1])

# Años desde los nombres de las capas
anios <- suppressWarnings(as.integer(names(temperature_2m_12m)))
if (any(is.na(anios))) anios <- seq_len(nlyr(temperature_2m_12m))

temperatura_promedio_anual <- 
  tibble(anio = anios, temperatura = vals) |> 
  arrange(anio)

g <- ggplot(
  temperatura_promedio_anual,
  aes(x = anio, y = temperatura, group = 1, 
      text = paste0("Año: ", anio,
                    "<br>Temperatura promedio anual: ", scales::number(temperatura, accuracy = 0.1), " °C"))
  ) +
  geom_line(color = "red", linewidth = 1) +
  geom_point(color = "red", size = 2) +
  geom_smooth(method = "lm", se = FALSE, linetype = "dashed", linewidth = 0.8, color = "gray30") +
  labs(x = "Año", y = "Temperatura promedio a 2m (°C)") +
  scale_x_continuous(breaks = cortes_anios, limits = lim_x, minor_breaks = NULL) +
  scale_y_continuous(labels = scales::number_format(accuracy = 0.1)) +
  theme_minimal(base_size = 12) +
  theme(panel.grid.major.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))

ggplotly(g, tooltip = "text") |> config(locale = "es")
```

# Evolución anual del área quemada y la temperatura

```{r}
#| label: grafico-area-y-temp-plotly
#| code-fold: true
#| warning: false
#| message: false

# Unir series ya creadas
serie_at <-
  dplyr::full_join(
    dplyr::select(incendios_por_anio, anio, area_quemada_total),
    dplyr::select(temperatura_promedio_anual, anio, temperatura),
    by = "anio"
  ) |>
  dplyr::arrange(anio) |>
  dplyr::mutate(
    tt_area = paste0(
      "Año: ", anio,
      "<br>Área quemada: ", scales::comma(area_quemada_total), " ha"
    ),
    tt_temp = paste0(
      "Año: ", anio,
      "<br>Temperatura: ", scales::number(temperatura, accuracy = 0.1), " °C"
    )
  )

# Tendencias lineales (como en los gráficos previos)
df_area <- tidyr::drop_na(serie_at, area_quemada_total)
df_temp <- tidyr::drop_na(serie_at, temperatura)
pred_area <- tibble::tibble(
  anio = df_area$anio,
  yhat = predict(lm(area_quemada_total ~ anio, data = df_area), newdata = df_area)
)
pred_temp <- tibble::tibble(
  anio = df_temp$anio,
  yhat = predict(lm(temperatura ~ anio, data = df_temp), newdata = df_temp)
)

# Plotly con doble eje (izq: área, der: temperatura)
fig <- plotly::plot_ly() |>
  plotly::add_lines(
    data = serie_at,
    x = ~anio, y = ~area_quemada_total,
    name = "Área quemada (ha)",
    hovertemplate = ~tt_area,
    line = list(color = "red", width = 2)
  ) |>
  plotly::add_lines(
    data = serie_at,
    x = ~anio, y = ~temperatura,
    name = "Temp. promedio a 2 m (°C)",
    hovertemplate = ~tt_temp,
    line = list(color = "steelblue", width = 2),
    yaxis = "y2"
  ) |>
  # Tendencias (líneas punteadas)
  plotly::add_lines(
    data = pred_area, x = ~anio, y = ~yhat,
    showlegend = FALSE, line = list(dash = "dash", width = 1, color = "red")
  ) |>
  plotly::add_lines(
    data = pred_temp, x = ~anio, y = ~yhat,
    showlegend = FALSE, line = list(dash = "dash", width = 1, color = "steelblue"),
    yaxis = "y2"
  ) |>
  plotly::layout(
    xaxis = list(
      title = "Año",
      tickvals = cortes_anios,
      range = c(min(lim_x), max(lim_x))
    ),
    yaxis = list(
      title = "Área quemada (ha)",
      tickformat = ",.0f"
    ),
    yaxis2 = list(
      title = list(text = "Temperatura promedio a 2 m (°C)", standoff = 16),
      overlaying = "y",
      side = "right",
      tickformat = ".1f",
      automargin = TRUE
    ),
    legend = list(orientation = "h", x = 0, y = 1.15),
    margin = list(t = 90, r = 80, b = 60, l = 60)
  ) |>
  plotly::config(locale = "es", displayModeBar = TRUE)

fig
```

# Relación lineal entre temperatura y área quemada

```{r}
#| label: significacion-area-vs-temperatura
#| code-fold: true
#| warning: false
#| message: false

# Paquetes necesarios para errores robustos
suppressWarnings({
  library(lmtest)
  library(sandwich)
  library(knitr)
  library(kableExtra)
})

# --- Unir y alistar datos ---
df <- dplyr::inner_join(
  dplyr::select(incendios_por_anio, anio, area_quemada_total),
  dplyr::select(temperatura_promedio_anual, anio, temperatura),
  by = "anio"
) |>
  dplyr::arrange(anio) |>
  tidyr::drop_na()

# --- Correlaciones ---
pear <- cor.test(df$area_quemada_total, df$temperatura, method = "pearson")
spear <- cor.test(df$area_quemada_total, df$temperatura, method = "spearman")

# --- Regresión lineal con SE robustos Newey-West (maneja autocorrelación anual) ---
mod  <- lm(area_quemada_total ~ temperatura, data = df)

# lag sugerido para NW (regla común)
nw_lag <- max(1L, floor(4 * (nrow(df) / 100)^(2/9)))
ct   <- lmtest::coeftest(mod, vcov = sandwich::NeweyWest(mod, lag = nw_lag, prewhite = TRUE, adjust = TRUE))
beta <- unname(ct["temperatura", "Estimate"])
se_r <- unname(ct["temperatura", "Std. Error"])
pval <- unname(ct["temperatura", "Pr(>|t|)"])
r2   <- summary(mod)$r.squared

# IC 95% (robusto) para la pendiente
z    <- 1.96
ci_l <- beta - z * se_r
ci_u <- beta + z * se_r

# --- Tabla breve de resultados ---
resumen <- tibble::tibble(
  indicador = c("Correlación de Pearson (r)", "Correlación de Spearman (ρ)",
                "Pendiente β (área ~ temp)", "IC95% β", "p-valor (β)", "R² (lineal)"),
  valor     = c(
    sprintf("%.3f (p=%.8f)", pear$estimate, pear$p.value),
    sprintf("%.3f (p=%.8f)", spear$estimate, spear$p.value),
    sprintf("%.3f", beta),
    sprintf("[%.3f, %.3f]", ci_l, ci_u),
    sprintf("%.4g", pval),
    sprintf("%.3f", r2)
  )
)

knitr::kable(
  resumen,
  format   = "html",
  col.names = c("Indicador", "Valor"),
  align    = c("l", "r"),
  caption  = sprintf("Resultados (n = %d; lag Newey–West = %d)", nrow(df), nw_lag)
) |>
  kableExtra::kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position   = "center"
  )
```

```{r}
#| label: scatter-significacion-area-vs-temperatura
#| code-fold: true
#| warning: false
#| message: false

# --- Scatter con recta de ajuste y anotación de R² y p ---
# datos para la recta
pred_line <- tibble::tibble(
  temperatura = seq(min(df$temperatura, na.rm = TRUE),
                    max(df$temperatura, na.rm = TRUE), length.out = 100)
)
pred_line$area_fit <- predict(mod, newdata = pred_line)

fig_sig <- plotly::plot_ly() |>
  plotly::add_markers(
    data = df,
    x = ~temperatura, y = ~area_quemada_total,
    name = "Datos",
    hovertemplate = paste0(
      "Año: %{customdata}<br>",
      "Temp: %{x:.1f} °C<br>",
      "Área: %{y:,.0f} ha<extra></extra>"
    ),
    customdata = df$anio
  ) |>
  plotly::add_lines(
    data = pred_line,
    x = ~temperatura, y = ~area_fit,
    name = "Ajuste lineal",
    line = list(dash = "solid", width = 2)
  ) |>
  plotly::layout(
    xaxis  = list(title = "Temperatura promedio a 2 m (°C)", tickformat = ".1f"),
    yaxis  = list(title = "Área quemada (ha)", tickformat = ",.0f"),
    legend = list(orientation = "h", x = 0, y = 1.15),
    margin = list(t = 90, r = 40, b = 60, l = 60),
    annotations = list(
      list(
        x = 0.02, y = 0.98, xref = "paper", yref = "paper",
        text = sprintf("R² = %.3f<br>β = %.3f (IC95%% %.3f, %.3f)<br>p = %.4g",
                       r2, beta, ci_l, ci_u, pval),
        showarrow = FALSE, align = "left", bgcolor = "rgba(255,255,255,0.8)",
        bordercolor = "rgba(0,0,0,0.2)", borderwidth = 1, borderpad = 4
      )
    )
  ) |>
  plotly::config(locale = "es", displayModeBar = TRUE)

fig_sig
```

El gráfico anterior muestra que a mayor temperatura media, hay más área quemada. La línea resume esa tendencia. Por cada grado adicional de temperatura, se queman en promedio unas 223 mil hectáreas más. Incluso siendo conservadores, el rango probable va de 50 mil a 396 mil hectáreas. El resultado es estadísticamente significativo y la temperatura por sí sola explica alrededor de un 36 % de la variación anual. El resto depende de otros factores climáticos y de gestión.