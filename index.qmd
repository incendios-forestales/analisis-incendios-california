---
title: "Análisis de datos de incendios forestales en California"
author: "Mariela Alvarado, Manuel Vargas"
date: "2025-09-16"
format: html
toc: true
lang: es
theme: cosmo
---

# Introducción

Los incendios forestales representan una de las amenazas medioambientales más críticas del siglo XXI. Además de destruir ecosistemas y biodiversidad, estos eventos comprometen la salud pública, la seguridad de las comunidades y la estabilidad económica, lo que evidencia la urgente necesidad de herramientas analíticas que permitan comprender y mitigar su impacto.

Mediante técnicas de procesamiento y análisis espacial de datos geográficos, el presente estudio se enfoca en la incidencia de incendios forestales como una manifestación del cambio climático. A través del lenguaje de programación R, se desarrolló un sistema de visualización e interpretación geoespacial que integra datos vectoriales y ráster. El análisis se realizó para el estado de California, Estados Unidos, una región particularmente vulnerable a eventos extremos asociados al calentamiento global.

# Metodología

Para llevar a cabo el estudio se utilizaron dos tipos de datos: de incendios forestales y climáticos.

Los datos de incendios forestales se obtuvieron a través del [Departamento de Silvicultura y Protección contra Incendios de California (CAL FIRE)](https://www.fire.ca.gov/), el cual publica registros de incendios ocurridos desde 1878 hasta la actualidad. Se desarrolló un programa que accedió la interfaz de programación de aplicaciones (API) de CAL FIRE y para cada incendio se descargaron más de 20 variables asociadas, entre las que pueden mencionarse su nombre, causa, área quemada, fecha de emisión de la alarma, fecha de contención y geometría de polígono.

Por su parte, los datos climáticos provienen del [Centro Europeo de Previsiones Meteorológicas a Medio Plazo (ECMWF)](https://www.ecmwf.int/) y su [Reanálisis Atmosférico de Quinta Generación (ERA5)](https://cds.climate.copernicus.eu/). ERA5 integra observaciones y un modelo numérico para reconstruir histórica y continuamente el estado de la atmósfera y de la superficie terrestre. Combina millones de observaciones (estaciones, radiosondeos, satélites, boyas, etc.) para generar, en una malla regular, series temporales homogéneas de muchas variables atmosféricas y de superficie como temperatura, precipitación, viento, humedad, radiación, presión y oleaje. Cubre desde 1940 hasta el presente y cuenta con una resolución espacial de ~0.25° (≈31 km). En este trabajo se utilizó la versión enfocada en tierra, denominada ERA5-Land, con ~0.1° (≈9 km) de resolución y cobertura desde 1950. Estos datos se descargaron mediante un programa que accede el API de ERA5. De esta manera, las diferentes variables climáticas fueron asociadas a los sitios de los incendios.

El estudio se realizó para el periodo entre 1961 y 2024. El rango posterior a 1990 —en particular 1991–2020— se usa como "normal climatológica vigente" para el monitoreo operativo del clima actual. La escogencia de 1961–1990 proviene de las Normales Climatológicas de la OMM (WMO), que definen promedios de 30 años. La OMM mantiene 1961–1990 como referencia estándar para la evaluación del cambio climático a largo plazo. Además, representa el clima “pre-aceleración” del calentamiento global y está ampliamente documentado.

El análisis incluyó un total de 14358 registros de incendios forestales ocurridos en California entre 1961 y 2024, todos con fecha de emisión de la alarma, hora de emisión de la alarma y coordenadas geográficas. A cada incendio se le asociaron variables climáticas como temperatura, precipitación y viento.

Los programas para acceder las API de CAL FIRE y ERA5 fueron desarrollados en el lenguaje de programación [R](https://www.r-project.org/). Los documentos con visualizaciones como tablas, gráficos estadísticos y mapas interactivos fueron desarrollados con R y con el sistema de publicación técnica y científica [Quarto](https://quarto.org/).

# Visualizaciones de datos

```{r}
#| label: cargar-bibliotecas
#| warning: false
#| message: false
#| code-fold: true
#| echo: false

library(tidyverse)
library(tibble)
library(lubridate)
library(DT)
library(plotly)
library(scales)
library(sf)
library(terra)
library(tmap)
library(rnaturalearth)
library(RColorBrewer)
library(tidycensus)
```

```{r}
#| label: definir-cortes-anios
#| echo: false

cortes_anios <- 
  c(1961, 1965, 1970, 1975, 1980, 1985, 1990, 
    1995, 2000, 2005, 2010, 2015, 2020, 2024)

lim_x <- range(cortes_anios)
```

```{r}
#| label: cargar-datos-incendios
#| warning: false
#| message: false
#| code-fold: true
#| echo: false

# Leer archivos
incendios    <- read_csv("datos/incendios_ca_combinado_1960-2024.csv")
incendios_sf <- st_read(
  "/vsizip/datos/incendios_ca_combinado_1960-2024.zip/incendios_ca_combinado_1960-2024.gpkg",
  quiet = TRUE
) |>
st_make_valid()

# Eliminar incendios que no tienen ALARM_DATE
incendios <-
  incendios |>
  drop_na(ALARM_DATE) |>
  filter(year(ALARM_DATE) >= 1961 & year(ALARM_DATE) <= 2024)

incendios_sf <-
  incendios_sf |>
  drop_na(ALARM_DATE) |>
  filter(year(ALARM_DATE) >= 1961 & year(ALARM_DATE) <= 2024)

# Convertir acres a hectáreas (1 acre = 0.40468564224 hectáreas)
incendios <- 
  incendios |>
  mutate(GIS_HA = as.numeric(GIS_ACRES) * 0.40468564224)

# Incendios agrupados por año
incendios_por_anio <-
  incendios |>
  mutate(
    anio = year(ALARM_DATE)
  ) |>
  filter(anio >= 1961 & anio <= 2024) |>
  group_by(anio) |>
  summarise(
    n                                         = n(),
    area_quemada_total                        = sum(GIS_HA, na.rm = TRUE),
    temperatura_2m_promedio_hora_fecha_alarma = mean(
      TEMPERATURE_2M_ALARM_DATE_MEAN, 
      na.rm                                   = TRUE
    ),
    .groups                                   = "drop"
  )

# Incendios agrupados por año y mes
incendios_por_anio_mes <-
  incendios |>
  mutate(
    anio = year(ALARM_DATE),
    mes  = month(ALARM_DATE, label = TRUE, abbr = TRUE)
  ) |>
  group_by(anio, mes) |>
  summarise(
    n                                         = n(),
    area_quemada_total                        = sum(GIS_HA, na.rm = TRUE),
    temperatura_2m_promedio_hora_fecha_alarma = mean(
      TEMPERATURE_2M_ALARM_DATE_MEAN, 
      na.rm = TRUE
    ),
    .groups                                   = "drop"
  )

# Asegurar que los meses queden en orden enero-diciembre
incendios_por_anio_mes$mes <- factor(
  incendios_por_anio_mes$mes,
  levels = month(ymd("2025-01-01") + months(0:11), label = TRUE, abbr = TRUE)
)

# Traducir las abreviaturas de los meses a español
incendios_por_anio_mes <-
  incendios_por_anio_mes |>
    mutate(
      mes = factor(
        mes,
        levels = month.abb,
        labels = c("Ene", "Feb", "Mar", "Abr", "May", "Jun",
                   "Jul", "Ago", "Sep", "Oct", "Nov", "Dic")
      )
    )
```

```{r}
#| label: cargar-datos-variables-climaticas-12m
#| warning: false
#| message: false
#| code-fold: true
#| echo: false

# Temperatura del aire a 2m
temperature_2m_12m <- rast("datos/2m_temperature_ca_promedio_1960-2024-12m.tif")
# Precipitación total
total_precipitation_12m <- rast("datos/total_precipitation_ca_promedio_1960-2024-12m.tif")
# Velocidad del viento a 10 m
wind_speed_10m_12m <- rast("datos/wind_speed_kmh_10m_promedio_1960-2024.tif")
# Índice de área foliar (LAI) – vegetación baja
lai_low_vegetation_12m <- rast("datos/leaf_area_index_low_vegetation_ca_promedio_1960-2024-12m.tif")

# Renombrar las capas de las variables climáticas
nombres_capas_variables_climaticas <- c(
  "1960", "1961", "1962", "1963", "1964",
  "1965", "1966", "1967", "1968", "1969",
  "1970", "1971", "1972", "1973", "1974",
  "1975", "1976", "1977", "1978", "1979",
  "1980", "1981", "1982", "1983", "1984",
  "1985", "1986", "1987", "1988", "1989",
  "1990", "1991", "1992", "1993", "1994",
  "1995", "1996", "1997", "1998", "1999",
  "2000", "2001", "2002", "2003", "2004", 
  "2005", "2006", "2007", "2008", "2009", 
  "2010", "2011", "2012", "2013", "2014", 
  "2015", "2016", "2017", "2018", "2019", 
  "2020", "2021", "2022", "2023", "2024"
)

names(temperature_2m_12m)           <- nombres_capas_variables_climaticas
names(total_precipitation_12m)      <- nombres_capas_variables_climaticas
names(wind_speed_10m_12m)           <- nombres_capas_variables_climaticas
names(lai_low_vegetation_12m)       <- nombres_capas_variables_climaticas

# Filtrar años
yrs <- as.character(1961:2024)

temperature_2m_12m           <- temperature_2m_12m[[names(temperature_2m_12m)                     %in% yrs]]
total_precipitation_12m      <- total_precipitation_12m[[names(total_precipitation_12m)           %in% yrs]]
wind_speed_10m_12m           <- wind_speed_10m_12m[[names(wind_speed_10m_12m)                     %in% yrs]]
lai_low_vegetation_12m       <- lai_low_vegetation_12m[[names(lai_low_vegetation_12m)             %in% yrs]]
```

```{r}
#| label: colores
#| echo: false

# Paleta base (Okabe–Ito: colorblind-safe)
col <- c(
  cantidad_incendios = "#111111", # negro suave (cantidad de incendios)
  area_quemada       = "#D55E00", # vermillion (área quemada)
  temperatura        = "#FF0000", # temperatura (rojo)
  precipitacion      = "#0000FF"  # precipitación (azul)
)

# Utilidad para transparencias cuando haga falta
col_a <- function(hex, alpha = 0.3) grDevices::adjustcolor(hex, alpha.f = alpha)
```

## Datos sobre incendios forestales

En la siguiente tabla, la longitud y la latitud corresponden a las coordenadas geográficas (WGS84) del centroide del polígono del incendio. La columna de temperatura corresponde al promedio de temperatura a 2 metros sobre la superficie durante la fecha de emisión de la alarma, mientras que la columna de precipitación al total de precipitación durante la fecha de emisión de la alarma.

### Registros de incendios

```{r}
#| label: tabla-incendios
#| code-fold: true

# Definir la tabla DT
t <-
  incendios |>
  mutate(
    # Deja solo la parte de fecha y conviértela a Date (sirve si viene como "1960-03-18T08:00:00Z")
    ALARM_DATE = {
      x <- as.character(ALARM_DATE)
      x <- ifelse(nchar(x) > 10, substr(x, 1, 10), x)
      as.Date(x)
    }
  ) |>
  select(
    FIRE_NAME, Lon, Lat, ALARM_DATE, 
    GIS_HA, TEMPERATURE_2M_ALARM_DATE_MEAN, PRECIPITATION_ALARM_DATE_SUM
  ) |>
  arrange(ALARM_DATE) |>
  datatable(
    rownames = FALSE,
    colnames = c(
      "Nombre del incendio", "Longitud", "Latitud", "Fecha de alarma", 
      "Área quemada (ha)", "Temperatura (°C)", "Precipitación (mm)"
    ),
    options = list(
      pageLength = 10,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    )
  ) |>
  formatRound(
    columns = c(
      "GIS_HA", "Lon", "Lat", 
      "TEMPERATURE_2M_ALARM_DATE_MEAN", "PRECIPITATION_ALARM_DATE_SUM"
    ),
    digits = 4
  )

# Mostrar la tabla
t
```

```{r}
#| label: mapa-incendios
#| echo: false
#| message: false
#| warning: false
#| code-fold: true

incendios_web <- st_transform(incendios_sf, 3857)
usa <- ne_states(country = "United States of America", returnclass = "sf")
ca  <- subset(usa, name == "California") |> st_transform(3857)

tm_shape(ca) + 
  tm_polygons(col = "#f5f5f5", border.col = "#bdbdbd") +
  tm_shape(incendios_web) +
  tm_polygons(col = "TEMPERATURE_2M_ALARM_DATE_MEAN",
              palette = "-RdYlBu", style = "cont", alpha = 0.6,
              border.col = NA, title = "Temperatura del sitio\ndel incendio (°C)") +
  tm_layout(bg.color = "white", legend.outside = TRUE, frame = FALSE)
```

En mapa anterior muestra los polígonos de los incendios coloreados según el promedio de temperatura a 2 metros sobre la superficie durante la fecha de emisión de la alarma. Puede observarse que los incendios se concentran en las estribaciones de la Sierra Nevada y de las cordilleras costeras, donde hay más combustible continuo (ej. matorrales o bosques), así como pendientes y eventos de calor y viento que favorecen megaincendios.

La “franja vacía” en el centro corresponde al Valle Central (Sacramento–San Joaquín). Se aprecian pocos incendios debido a que ahí predomina la agricultura intensiva y el uso urbano del suelo. Hay poco combustible continuo, los campos irrigados y barbechos actúan como cortafuegos y el mosaico de parcelas limita la propagación, por lo que muchos incendios se detienen en viñedos y otros cultivos de frutas (<https://ucanr.edu/program/uc-anr-fire-network/fire-protection-crops-vineyards-and-orchards>). Además, los polígonos publicados por CAL FIRE suelen ser de incendios forestales/agrícolas “wildland”; así que muchas quemas agrícolas no se cartografían como polígonos de gran incendio, por lo que el valle podría estar sub-representado.

### Cantidad de incendios y área quemada por año

```{r}
#| label: grafico-cantidad-incendios-area-quemada
#| code-fold: true
#| warning: false
#| message: false

# Serie base con tooltips
serie_na <-
  incendios_por_anio |>
  dplyr::arrange(anio) |>
  dplyr::mutate(
    tt_area = paste0(
      "Año: ", anio,
      "<br>Área quemada: ", scales::comma(area_quemada_total), " ha"
    ),
    tt_n = paste0(
      "Año: ", anio,
      "<br>Cantidad de incendios: ", scales::comma(n)
    )
  )

# Datos para líneas de tendencia (ignorar NA)
df_area <- tidyr::drop_na(serie_na, area_quemada_total)
df_n    <- tidyr::drop_na(serie_na, n)

pred_area <- tibble::tibble(
  anio = df_area$anio,
  yhat = predict(stats::lm(area_quemada_total ~ anio, data = df_area), newdata = df_area)
)
pred_n <- tibble::tibble(
  anio = df_n$anio,
  yhat = predict(stats::lm(n ~ anio, data = df_n), newdata = df_n)
)

# Plotly con doble eje (izq: área; der: cantidad)
  fig <- plotly::plot_ly() |>
    plotly::add_lines(
    data = serie_na,
    x = ~anio, y = ~area_quemada_total,
    name = "Área quemada (ha)",
    line = list(color = col["area_quemada"], width = 2)
  ) |>
  plotly::add_lines(
    data = serie_na,
    x = ~anio, y = ~n,
    name = "Cantidad de incendios",
    line = list(color = col["cantidad_incendios"], width = 2),
    yaxis = "y2"
  ) |>
  plotly::add_lines(
    data = pred_area, x = ~anio, y = ~yhat,
    showlegend = FALSE, line = list(color = col["area_quemada"], dash = "dash", width = 1)
  ) |>
  plotly::add_lines(
    data = pred_n, x = ~anio, y = ~yhat,
    showlegend = FALSE, yaxis = "y2",
    line = list(color = col["cantidad_incendios"], dash = "dash", width = 1)
  ) |>
  plotly::layout(
    xaxis = list(
      title = "Año",
      tickvals = cortes_anios,
      range = c(min(lim_x), max(lim_x))
    ),
    yaxis = list(
      title = "Área quemada (ha)",
      tickformat = ",.0f"
    ),
    yaxis2 = list(
      title = list(text = "Cantidad de incendios", standoff = 16),
      overlaying = "y",
      side = "right",
      tickformat = ",.0f",
      automargin = TRUE
    ),
    legend = list(orientation = "h", x = 0, y = 1.15),
    margin = list(t = 90, r = 80, b = 60, l = 60)
  ) |>
  plotly::config(locale = "es", displayModeBar = TRUE)

fig
```

Tanto la cantidad de incendios como el área quemada anualmente muestran tendencias crecientes. El aumento es más marcado desde mediados de los 2000. El área quemada es muy volátil: años relativamente tranquilos se alternan con picos extremos (especialmente ~2018–2021, con 2020 como caso atípico o *outlier* histórico). Esto sugiere que unos pocos megaincendios podrían explicar gran parte del total anual. Hay años con muchos incendios pero área moderada, y otros con menos eventos pero áreas enormes. Es decir, el tamaño promedio de los incendios cambia con las condiciones (sequía, olas de calor, viento), no solo con el conteo.

### Patrones mensuales

#### Cantidad de incendios por mes y año

```{r}
#| label: grafico-cantidad-incendios-por-mes-anio
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

# Heatmap
g <-
  ggplot(
    incendios_por_anio_mes,
    aes(
      x = mes,
      y = factor(anio),
      fill = n,
      text = paste0(
        "Año: ", anio,
        "<br>Mes: ", mes,
        "<br>Cantidad de incendios: ", n
      )
    )
  ) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(name = "Incendios", option = "inferno", direction = -1) +
  labs(
    x = "Mes",
    y = "Año"
  ) +
  theme_minimal(base_size = 10) +
  theme(
    panel.grid = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
# g_interactivo <- 
#   ggplotly(g, tooltip = "text", height = 700) |> 
#   config(locale = 'es')

# Mostrar gráfico
g
```

El mapa de calor revela una estacionalidad marcada: muy pocos incendios en invierno y principios de primavera, con un rápido aumento a partir de mayo, pico entre julio y agosto y descenso hacia octubre. A partir de los 2000 se observan colores más intensos en verano y, en varios años, con extensión a septiembre–octubre. Destaca el periodo 2017-2021.

#### Área quemada por mes y año

```{r}
#| label: grafico-area-quemada-por-mes-anio
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

# Heatmap
g <-
  ggplot(
    incendios_por_anio_mes,
    aes(
      x = mes,
      y = factor(anio),
      fill = area_quemada_total,
      text = paste0(
        "Año: ", anio,
        "<br>Mes: ", mes,
        "<br>Área quemada: ", comma(area_quemada_total, accuracy = 1), " ha"
      )
    )
  ) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(
    name       = "Área (ha)",
    option     = "inferno",
    direction  = -1,
    labels     = label_number(accuracy = 1, big.mark = ",")
  ) +
  labs(
    x = "Mes",
    y = "Año"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Versión interactiva
# g_interactivo <- 
#   ggplotly(g, tooltip = "text", height = 700) |> 
#   config(locale = 'es')

# Mostrar el gráfico
g
```

El mapa de calor de área quemada muestra una estacionalidad aún más marcada que el conteo: los picos se concentran entre julio y septiembre, con algunos octubres muy activos, y destacan años extremos recientes (en especial 2020, con un máximo excepcional en agosto–septiembre). Se observa, además, cierta extensión de la temporada hacia septiembre–octubre en las últimas décadas.

### Diferencias entre periodos

```{r}
#| label: comparacion-incendios-por-periodo
#| code-fold: true
#| warning: false
#| message: false

# Resumen para dos periodos
tabla_periodos_n <-
  incendios_por_anio |>
  dplyr::mutate(periodo = dplyr::if_else(anio <= 1990, "1961–1990", "1991–2024")) |>
  dplyr::group_by(periodo) |>
  dplyr::summarise(
    n_promedio = mean(n, na.rm = TRUE),
    n_total    = sum(n, na.rm = TRUE),
    .groups = "drop"
  ) |>
  dplyr::mutate(periodo = factor(periodo, levels = c("1961–1990", "1991–2024"))) |>
  dplyr::arrange(periodo)

# Delta absoluto y relativo (periodo2 - periodo1)
a_n     <- tabla_periodos_n$n_promedio[1]
b_n     <- tabla_periodos_n$n_promedio[2]
delta_n <- b_n - a_n
pct_n   <- if (is.na(a_n) || a_n == 0) NA_real_ else delta_n / a_n

# Gráfico: cantidad de incendios (promedio anual por periodo)
plotly::plot_ly(
  data = tabla_periodos_n,
  x    = ~periodo,
  y    = ~n_promedio,
  type = "bar",
  text = ~scales::comma(round(n_promedio, 0)),
  textposition = "outside",
  hovertemplate = paste(
    "<b>%{x}</b><br>",
    "Incendios por año: %{y:,}<br>",
    "Incendios totales: %{customdata:,}<extra></extra>"
  ),
  customdata = ~n_total,
  marker = list(color = col["cantidad_incendios"])
) |>
plotly::layout(
  title = "Cantidad de incendios por periodo (promedio anual)",
  yaxis = list(title = "Incendios por año", tickformat = ",.0f"),
  xaxis = list(title = ""),
  showlegend = FALSE,
  margin = list(t = 80, r = 30, b = 40, l = 70),
  annotations = list(
    list(
      x = 0.5, y = 1.12, xref = "paper", yref = "paper",
      text = paste0(
        "Δ = ", scales::comma(round(delta_n, 1)),
        if (!is.na(pct_n)) paste0(" (", scales::percent(pct_n, accuracy = 0.1), ")") else ""
      ),
      showarrow = FALSE, font = list(size = 12)
    )
  )
) |>
plotly::config(locale = "es", displayModeBar = FALSE)
```

El gráfico muestra un aumento claro del número medio de incendios por año al pasar de 1961–1990 a 1991–2024. Esto sugiere más igniciones y/o mayor detección y reporte en décadas recientes.

```{r}
#| label: comparacion-area-quemada-por-periodo
#| code-fold: true
#| warning: false
#| message: false

# Resumen para dos periodos
tabla_periodos_area <-
  incendios_por_anio |>
  dplyr::mutate(periodo = dplyr::if_else(anio <= 1990, "1961–1990", "1991–2024")) |>
  dplyr::group_by(periodo) |>
  dplyr::summarise(
    area_promedio_ha = mean(area_quemada_total, na.rm = TRUE),
    area_total_ha    = sum(area_quemada_total, na.rm = TRUE),
    .groups = "drop"
  ) |>
  dplyr::mutate(periodo = factor(periodo, levels = c("1961–1990", "1991–2024"))) |>
  dplyr::arrange(periodo)

# Delta absoluto y relativo (periodo2 - periodo1)
a_area     <- tabla_periodos_area$area_promedio_ha[1]
b_area     <- tabla_periodos_area$area_promedio_ha[2]
delta_area <- b_area - a_area
pct_area   <- if (is.na(a_area) || a_area == 0) NA_real_ else delta_area / a_area

# Gráfico: área quemada (promedio anual por periodo)
plotly::plot_ly(
  data = tabla_periodos_area,
  x    = ~periodo,
  y    = ~area_promedio_ha,
  type = "bar",
  text = ~scales::comma(round(area_promedio_ha, 0)),
  textposition = "outside",
  hovertemplate = paste(
    "<b>%{x}</b><br>",
    "Hectáreas por año: %{y:,}<br>",
    "Hectáreas totales: %{customdata:,}<extra></extra>"
  ),
  customdata = ~area_total_ha,
  marker = list(color = col["area_quemada"])
) |>
plotly::layout(
  title = "Área quemada por periodo (promedio anual)",
  yaxis = list(title = "Hectáreas por año", tickformat = ",.0f"),
  xaxis = list(title = ""),
  showlegend = FALSE,
  margin = list(t = 80, r = 30, b = 40, l = 70),
  annotations = list(
    list(
      x = 0.5, y = 1.12, xref = "paper", yref = "paper",
      text = paste0(
        "Δ = ", scales::comma(round(delta_area, 1)), " ha",
        if (!is.na(pct_area)) paste0(" (", scales::percent(pct_area, accuracy = 0.1), ")") else ""
      ),
      showarrow = FALSE, font = list(size = 12)
    )
  )
) |>
plotly::config(locale = "es", displayModeBar = FALSE)
```

El incremento del promedio anual de hectáreas quemadas entre 1961–1990 y 1991–2024 es más marcado que el del conteo de incendios, lo que implica que el tamaño medio de los incendios ha crecido.

## Variables climáticas

### Temperatura

```{r}
#| label: grafico-2m-temperature-promedio-por-anio
#| code-fold: true
#| warning: false
#| message: false
#| echo: false 

# Promedio espacial anual (una media por capa)
vals <- drop(terra::global(temperature_2m_12m, mean, na.rm = TRUE)[, 1])

# Años desde los nombres de las capas
anios <- suppressWarnings(as.integer(names(temperature_2m_12m)))
if (any(is.na(anios))) anios <- seq_len(nlyr(temperature_2m_12m))

temperatura_promedio_anual <- 
  tibble(anio = anios, temperatura = vals) |> 
  arrange(anio)

# g <- ggplot(
#   temperatura_promedio_anual,
#   aes(x = anio, y = temperatura, group = 1, 
#       text = paste0("Año: ", anio,
#                     "<br>Temperatura: ", scales::number(temperatura, accuracy = 0.1), " °C"))
#   ) +
#   geom_line(color = col["temperatura"], linewidth = 1) +
#   geom_point(color = col["temperatura"], size = 2) +
#   geom_smooth(method = "lm", se = FALSE, linetype = "dashed", linewidth = 0.8, color = col["temperatura"]) +
#   labs(x = "Año", y = "Temperatura promedio a 2 m (°C)") +
#   scale_x_continuous(breaks = cortes_anios, limits = lim_x, minor_breaks = NULL) +
#   scale_y_continuous(labels = scales::number_format(accuracy = 0.1)) +
#   theme_minimal(base_size = 12) +
#   theme(panel.grid.major.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
# 
# ggplotly(g, tooltip = "text") |> config(locale = "es")
```

#### Evolución anual de temperatura y área quemada

```{r}
#| label: grafico-area-y-temp-plotly
#| code-fold: true
#| warning: false
#| message: false

# Unir series ya creadas
serie_at <-
  dplyr::full_join(
    dplyr::select(incendios_por_anio, anio, area_quemada_total),
    dplyr::select(temperatura_promedio_anual, anio, temperatura),
    by = "anio"
  ) |>
  dplyr::arrange(anio) |>
  dplyr::mutate(
    tt_area = paste0(
      "Año: ", anio,
      "<br>Área quemada: ", scales::comma(area_quemada_total), " ha"
    ),
    tt_temp = paste0(
      "Año: ", anio,
      "<br>Temperatura: ", scales::number(temperatura, accuracy = 0.1), " °C"
    )
  )

# Tendencias lineales (como en los gráficos previos)
df_area <- tidyr::drop_na(serie_at, area_quemada_total)
df_temp <- tidyr::drop_na(serie_at, temperatura)
pred_area <- tibble::tibble(
  anio = df_area$anio,
  yhat = predict(lm(area_quemada_total ~ anio, data = df_area), newdata = df_area)
)
pred_temp <- tibble::tibble(
  anio = df_temp$anio,
  yhat = predict(lm(temperatura ~ anio, data = df_temp), newdata = df_temp)
)

# Plotly con doble eje (izq: área, der: temperatura)
fig <- plotly::plot_ly() |>
  plotly::add_lines(
    data = serie_at,
    x = ~anio, y = ~area_quemada_total,
    name = "Área quemada (ha)",
    hovertemplate = ~tt_area,
    line = list(color = col["area_quemada"], width = 2)
  ) |>
  plotly::add_lines(
    data = serie_at,
    x = ~anio, y = ~temperatura,
    name = "Temperatura promedio a 2 m (°C)",
    hovertemplate = ~tt_temp,
    line = list(color = col["temperatura"], width = 2),
    yaxis = "y2"
  ) |>
  # Tendencias (líneas punteadas)
  plotly::add_lines(
    data = pred_area, x = ~anio, y = ~yhat,
    showlegend = FALSE, line = list(dash = "dash", width = 1, color = col["area_quemada"])
  ) |>
  plotly::add_lines(
    data = pred_temp, x = ~anio, y = ~yhat,
    showlegend = FALSE, line = list(dash = "dash", width = 1, color = col["temperatura"]),
    yaxis = "y2"
  ) |>
  plotly::layout(
    xaxis = list(
      title = "Año",
      tickvals = cortes_anios,
      range = c(min(lim_x), max(lim_x))
    ),
    yaxis = list(
      title = "Área quemada (ha)",
      tickformat = ",.0f"
    ),
    yaxis2 = list(
      title = list(text = "Temperatura promedio a 2 m (°C)", standoff = 16),
      overlaying = "y",
      side = "right",
      tickformat = ".1f",
      automargin = TRUE
    ),
    legend = list(orientation = "h", x = 0, y = 1.15),
    margin = list(t = 90, r = 80, b = 60, l = 60)
  ) |>
  plotly::config(locale = "es", displayModeBar = TRUE)

fig
```

#### Relación lineal entre temperatura y área quemada

```{r}
#| label: significacion-area-vs-temperatura
#| code-fold: true
#| warning: false
#| message: false

# Paquetes necesarios para errores robustos
suppressWarnings({
  library(lmtest)
  library(sandwich)
  library(knitr)
  library(kableExtra)
})

# --- Unir y alistar datos ---
df <- dplyr::inner_join(
  dplyr::select(incendios_por_anio, anio, area_quemada_total),
  dplyr::select(temperatura_promedio_anual, anio, temperatura),
  by = "anio"
) |>
  dplyr::arrange(anio) |>
  tidyr::drop_na()

# --- Correlaciones ---
pear <- cor.test(df$area_quemada_total, df$temperatura, method = "pearson")
spear <- cor.test(df$area_quemada_total, df$temperatura, method = "spearman")

# --- Regresión lineal con SE robustos Newey-West (maneja autocorrelación anual) ---
mod  <- lm(area_quemada_total ~ temperatura, data = df)

# lag sugerido para NW (regla común)
nw_lag <- max(1L, floor(4 * (nrow(df) / 100)^(2/9)))
ct   <- lmtest::coeftest(mod, vcov = sandwich::NeweyWest(mod, lag = nw_lag, prewhite = TRUE, adjust = TRUE))
beta <- unname(ct["temperatura", "Estimate"])
se_r <- unname(ct["temperatura", "Std. Error"])
pval <- unname(ct["temperatura", "Pr(>|t|)"])
r2   <- summary(mod)$r.squared

# IC 95% (robusto) para la pendiente
z    <- 1.96
ci_l <- beta - z * se_r
ci_u <- beta + z * se_r

# --- Tabla breve de resultados ---
resumen <- tibble::tibble(
  indicador = c("Correlación de Pearson (r)", "Correlación de Spearman (ρ)",
                "Pendiente β (área ~ temp)", "IC95% β", "p-valor (β)", "R² (lineal)"),
  valor     = c(
    sprintf("%.3f (p=%.8f)", pear$estimate, pear$p.value),
    sprintf("%.3f (p=%.8f)", spear$estimate, spear$p.value),
    sprintf("%.3f", beta),
    sprintf("[%.3f, %.3f]", ci_l, ci_u),
    sprintf("%.4g", pval),
    sprintf("%.3f", r2)
  )
)

knitr::kable(
  resumen,
  format   = "html",
  col.names = c("Indicador", "Valor"),
  align    = c("l", "r"),
  caption  = sprintf("Resultados (n = %d; lag Newey–West = %d)", nrow(df), nw_lag)
) |>
  kableExtra::kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position   = "center"
  )
```

```{r}
#| label: scatter-significacion-area-vs-temperatura
#| code-fold: true
#| warning: false
#| message: false

# --- Scatter con recta de ajuste y anotación de R² y p ---
# datos para la recta
pred_line <- tibble::tibble(
  temperatura = seq(min(df$temperatura, na.rm = TRUE),
                    max(df$temperatura, na.rm = TRUE), length.out = 100)
)
pred_line$area_fit <- predict(mod, newdata = pred_line)

fig_sig <- plotly::plot_ly() |>
  plotly::add_markers(
    data = df,
    x = ~temperatura, y = ~area_quemada_total,
    name = "Datos",
    hovertemplate = paste0(
      "Año: %{customdata}<br>",
      "Temperatura: %{x:.1f} °C<br>",
      "Área quemada: %{y:,.0f} ha<extra></extra>"
    ),
    customdata = df$anio
  ) |>
  plotly::add_lines(
    data = pred_line,
    x = ~temperatura, y = ~area_fit,
    name = "Ajuste lineal",
    line = list(dash = "solid", width = 2)
  ) |>
  plotly::layout(
    xaxis  = list(title = "Temperatura promedio a 2 m (°C)", tickformat = ".1f"),
    yaxis  = list(title = "Área quemada (ha)", tickformat = ",.0f"),
    legend = list(orientation = "h", x = 0, y = 1.15),
    margin = list(t = 90, r = 40, b = 60, l = 60),
    annotations = list(
      list(
        x = 0.02, y = 0.98, xref = "paper", yref = "paper",
        text = sprintf("R² = %.3f<br>β = %.3f (IC95%% %.3f, %.3f)<br>p = %.4g",
                       r2, beta, ci_l, ci_u, pval),
        showarrow = FALSE, align = "left", bgcolor = "rgba(255,255,255,0.8)",
        bordercolor = "rgba(0,0,0,0.2)", borderwidth = 1, borderpad = 4
      )
    )
  ) |>
  plotly::config(locale = "es", displayModeBar = TRUE)

fig_sig
```

El gráfico anterior muestra que a mayor temperatura, hay más área quemada. Por cada grado adicional de temperatura, se queman en promedio unas 223 mil hectáreas más. Incluso siendo conservadores, el rango probable va de 50 mil a 396 mil hectáreas. El resultado es estadísticamente significativo y la temperatura por sí sola explica alrededor de un 36 % de la variación anual. El resto depende de otros factores climáticos y de gestión.

#### Diferencias entre periodos

```{r}
#| label: comparacion-temperatura-por-periodo
#| code-fold: true
#| warning: false
#| message: false

# Resumen de temperatura para dos periodos
tabla_periodos_temp <-
  temperatura_promedio_anual |>
  dplyr::filter(anio >= 1961, anio <= 2024) |>
  dplyr::mutate(
    periodo = dplyr::if_else(anio <= 1990, "1961–1990", "1991–2024")
  ) |>
  dplyr::group_by(periodo) |>
  dplyr::summarise(
    temp_promedio_c = mean(temperatura, na.rm = TRUE), # °C promedio anual del periodo
    n_anios         = dplyr::n(),
    .groups = "drop"
  ) |>
  dplyr::mutate(periodo = factor(periodo, levels = c("1961–1990", "1991–2024"))) |>
  dplyr::arrange(periodo)

# Delta absoluto y relativo (periodo reciente - periodo base)
a_t     <- tabla_periodos_temp$temp_promedio_c[1]
b_t     <- tabla_periodos_temp$temp_promedio_c[2]
delta_t <- b_t - a_t
pct_t   <- if (is.na(a_t) || a_t == 0) NA_real_ else delta_t / a_t

# Gráfico: temperatura promedio a 2 m por periodo
plotly::plot_ly(
  data = tabla_periodos_temp,
  x    = ~periodo,
  y    = ~temp_promedio_c,
  type = "bar",
  text = ~scales::number(temp_promedio_c, accuracy = 0.1),
  textposition = "outside",
  hovertemplate = paste(
    "<b>%{x}</b><br>",
    "Temperatura prom. anual: %{y:.1f} °C<br>",
    "Años en el periodo: %{customdata}<extra></extra>"
  ),
  customdata = ~n_anios,
  marker = list(color = col["temperatura"])
) |>
plotly::layout(
  title = "Temperatura promedio a 2 m por periodo (promedio anual)",
  yaxis = list(title = "°C", tickformat = ".1f"),
  xaxis = list(title = ""),
  showlegend = FALSE,
  margin = list(t = 80, r = 30, b = 40, l = 70),
  annotations = list(
    list(
      x = 0.5, y = 1.12, xref = "paper", yref = "paper",
      text = paste0(
        "Δ = ", scales::number(delta_t, accuracy = 0.1), " °C",
        if (!is.na(pct_t)) paste0(" (", scales::percent(pct_t, accuracy = 0.1), ")") else ""
      ),
      showarrow = FALSE, font = list(size = 12)
    )
  )
) |>
plotly::config(locale = "es", displayModeBar = FALSE)
```

El gráfico compara la temperatura media anual a 2 m sobre la superficie entre 1961–1990 y 1991–2024, mostrando un aumento de ~0.8 °C (≈5.8%) en el periodo reciente. Se incrementa la frecuencia de años calurosos y disminuye la de años fríos.

```{r}
#| label: mapas-temperatura-facets-por-periodo
#| code-fold: true
#| warning: false
#| message: false

# --- 1) Promedios por periodo (°C) ------------------------------------------
yrs_6190 <- as.character(1961:1990)
yrs_9124 <- as.character(1991:2024)

t_6190 <- terra::app(temperature_2m_12m[[names(temperature_2m_12m) %in% yrs_6190]],
                     fun = mean, na.rm = TRUE)
t_9124 <- terra::app(temperature_2m_12m[[names(temperature_2m_12m) %in% yrs_9124]],
                     fun = mean, na.rm = TRUE)

names(t_6190) <- "1961–1990"
names(t_9124) <- "1991–2024"

r_per <- c(t_6190, t_9124)  # stack con 2 capas (una por periodo)

# --- 2) Misma escala de colores en ambos mapas ------------------------------
mm    <- terra::minmax(r_per)
rng   <- range(mm, na.rm = TRUE)
brks  <- pretty(rng, n = 9)  # mismos cortes para ambos paneles

# --- 3) Borde de California (opcional, para contexto) -----------------------
if (!exists("ca")) {
  usa <- rnaturalearth::ne_states(country = "United States of America", returnclass = "sf")
  ca  <- subset(usa, name == "California")
}
ca_ll <- sf::st_transform(ca, crs = terra::crs(r_per, proj = TRUE))

# --- 4) Mapas lado a lado (facets) ------------------------------------------
tmap_mode("plot")

tm_shape(r_per) +
  tm_raster(
    palette = "-RdYlBu",        # rojo = más cálido, azul = más frío
    style   = "fixed",          # usa cortes fijos para que los colores sean comparables
    breaks  = brks,
    title   = "Temp. promedio (°C)"
  ) +
  tm_shape(ca_ll) + tm_borders(col = "#424242", lwd = 0.6) +
  tm_facets(ncol = 2, free.scales = FALSE) +  # misma escala en ambos
  tm_layout(
    legend.outside = TRUE,
    legend.format  = list(text.separator = " a "),
    frame = FALSE
  )
```

```{r}
#| label: mapas-diferencia-facets-estatico-titulos-fuera
#| code-fold: true
#| warning: false
#| message: false

# --- 1) Promedios por periodo (°C) y diferencia -----------------------------
yrs_6190 <- as.character(1961:1990)
yrs_9124 <- as.character(1991:2024)

t_6190 <- terra::app(temperature_2m_12m[[names(temperature_2m_12m) %in% yrs_6190]],
                     fun = mean, na.rm = TRUE)
t_9124 <- terra::app(temperature_2m_12m[[names(temperature_2m_12m) %in% yrs_9124]],
                     fun = mean, na.rm = TRUE)

dT <- t_9124 - t_6190
names(dT) <- "ΔT (°C)"

# --- 2) Escala de colores común (simétrica y fija) --------------------------
rng     <- drop(terra::global(dT, range, na.rm = TRUE))
max_abs <- max(abs(rng[1]), abs(rng[2]), na.rm = TRUE)
brks    <- pretty(c(-max_abs, max_abs), n = 9)
brks    <- sort(unique(c(brks, 0)))  # asegurar que 0 esté incluido

# --- 3) Bordes de California y puntos (centroides por Lon/Lat) --------------
if (!exists("ca")) {
  usa <- rnaturalearth::ne_states(country = "United States of America", returnclass = "sf")
  ca  <- subset(usa, name == "California")
}
ca_ll <- sf::st_transform(ca, crs = terra::crs(dT, proj = TRUE))

inc_rec_pts <- incendios |>
  dplyr::mutate(anio = lubridate::year(ALARM_DATE)) |>
  dplyr::filter(anio >= 1991, anio <= 2024, !is.na(Lon), !is.na(Lat)) |>
  sf::st_as_sf(coords = c("Lon", "Lat"), crs = 4326, remove = FALSE) |>
  sf::st_transform(crs = terra::crs(dT, proj = TRUE))

# --- 4) Dos mapas estáticos lado a lado; títulos fuera del mapa -------------
tmap_mode("plot")

# margen superior extra para ubicar el título en el “outer margin”
outer_top <- 0.10

m_left <-
  tm_shape(dT) +
  tm_raster(
    palette = "-RdYlBu",
    style   = "fixed",
    breaks  = brks,
    title   = "ΔT (°C)"
  ) +
  tm_shape(ca_ll) + tm_borders(col = "#424242", lwd = 0.6) +
  # título fuera del mapa (en margen superior)
  tm_credits("ΔT (1991–2024 − 1961–1990)",
             position = c("center", "top"),
             size = 1.1, fontface = "bold") +
  tm_layout(
    legend.outside = TRUE,
    legend.outside.position = "left",   # solo la leyenda en el panel izquierdo
    legend.stack = "vertical",
    outer.margins = c(outer_top, 0.02, 0.02, 0.02),
    frame = FALSE
  )

m_right <-
  tm_shape(dT) +
  tm_raster(
    palette = "-RdYlBu",
    style   = "fixed",
    breaks  = brks
  ) +
  tm_shape(ca_ll) + tm_borders(col = "#424242", lwd = 0.6) +
  tm_shape(inc_rec_pts) +
  tm_dots(col = "#111111", size = 0.03, alpha = 0.8, legend.show = FALSE) +
  # título fuera del mapa (en margen superior)
  tm_credits("ΔT + incendios (1991–2024)",
             position = c("center", "top"),
             size = 1.1, fontface = "bold") +
  tm_layout(
    legend.outside = TRUE,
    legend.outside.position = "left",   # solo la leyenda en el panel izquierdo
    legend.stack = "vertical",
    outer.margins = c(outer_top, 0.02, 0.02, 0.02),
    frame = FALSE
  )

tmap::tmap_arrange(m_left, m_right, ncol = 2, widths = c(1, 1))
```

Los mapas comparativos muestran un aumento generalizado de la temperatura media entre 1961–1990 y 1991–2024. El panel del periodo reciente exhibe tonos más cálidos en prácticamente todo el estado. La diferencia (ΔT) indica un calentamiento de ~0.5–1.0 °C en gran parte de California y núcleos de más de 1 °C en las estribaciones de la Sierra Nevada, sectores del interior sur y tramos de las cordilleras costeras, mientras que no se observan zonas amplias de enfriamiento. Al superponer los centroides de incendios recientes, se aprecia su concentración en regiones que combinan mayor ΔT, continuidad de combustibles y topografía favorable (Sierra Nevada y cadenas costeras), en contraste con el Valle Central más fragmentado por agricultura.

### Precipitación

```{r}
#| label: grafico-total-precipitation-por-anio
#| code-fold: true
#| warning: false
#| message: false
#| echo: false

# Promedio espacial anual (una media por capa)
vals <- drop(terra::global(total_precipitation_12m, mean, na.rm = TRUE)[, 1])

# Años desde los nombres de las capas
anios <- suppressWarnings(as.integer(names(total_precipitation_12m)))
if (any(is.na(anios))) anios <- seq_len(nlyr(total_precipitation_12m))

precipitacion_total_anual <- 
  tibble(anio = anios, precipitacion = vals) |> 
  arrange(anio)

# g <- ggplot(
#   precipitacion_total_anual,
#   aes(x = anio, y = precipitacion, group = 1, 
#       text = paste0("Año: ", anio,
#                     "<br>Precipitación: ", scales::number(precipitacion, accuracy = 0.1), " mm"))
#   ) +
#   geom_line(color = col["precipitacion"], linewidth = 1) +
#   geom_point(color = col["precipitacion"], size = 2) +
#   geom_smooth(method = "lm", se = FALSE, linetype = "dashed", linewidth = 0.8, color = col["precipitacion"]) +
#   labs(x = "Año", y = "Precipitación total (mm)") +
#   scale_x_continuous(breaks = cortes_anios, limits = lim_x, minor_breaks = NULL) +
#   scale_y_continuous(labels = scales::number_format(accuracy = 0.1)) +
#   theme_minimal(base_size = 12) +
#   theme(panel.grid.major.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
# 
# ggplotly(g, tooltip = "text") |> config(locale = "es")
```

#### Evolución anual de precipitación y área quemada

```{r}
#| label: grafico-area-y-prec-plotly
#| code-fold: true
#| warning: false
#| message: false

# Unir series ya creadas
serie_at <-
  dplyr::full_join(
    dplyr::select(incendios_por_anio, anio, area_quemada_total),
    dplyr::select(precipitacion_total_anual, anio, precipitacion),
    by = "anio"
  ) |>
  dplyr::arrange(anio) |>
  dplyr::mutate(
    tt_area = paste0(
      "Año: ", anio,
      "<br>Área quemada: ", scales::comma(area_quemada_total), " ha"
    ),
    tt_prec = paste0(
      "Año: ", anio,
      "<br>Precipitación: ", scales::number(precipitacion, accuracy = 0.1), "mm"
    )
  )

# Tendencias lineales (como en los gráficos previos)
df_area <- tidyr::drop_na(serie_at, area_quemada_total)
df_prec <- tidyr::drop_na(serie_at, precipitacion)
pred_area <- tibble::tibble(
  anio = df_area$anio,
  yhat = predict(lm(area_quemada_total ~ anio, data = df_area), newdata = df_area)
)
pred_prec <- tibble::tibble(
  anio = df_temp$anio,
  yhat = predict(lm(precipitacion ~ anio, data = df_prec), newdata = df_prec)
)

# Plotly con doble eje (izq: área, der: precipitación)
fig <- plotly::plot_ly() |>
  plotly::add_lines(
    data = serie_at,
    x = ~anio, y = ~area_quemada_total,
    name = "Área quemada (ha)",
    hovertemplate = ~tt_area,
    line = list(color = col["area_quemada"], width = 2)
  ) |>
  plotly::add_lines(
    data = serie_at,
    x = ~anio, y = ~precipitacion,
    name = "Precipitación total (mm)",
    hovertemplate = ~tt_prec,
    line = list(color = col["precipitacion"], width = 2),
    yaxis = "y2"
  ) |>
  # Tendencias (líneas punteadas)
  plotly::add_lines(
    data = pred_area, x = ~anio, y = ~yhat,
    showlegend = FALSE, line = list(dash = "dash", width = 1, color = col["area_quemada"])
  ) |>
  plotly::add_lines(
    data = pred_prec, x = ~anio, y = ~yhat,
    showlegend = FALSE, line = list(dash = "dash", width = 1, color = col["precipitacion"]),
    yaxis = "y2"
  ) |>
  plotly::layout(
    xaxis = list(
      title = "Año",
      tickvals = cortes_anios,
      range = c(min(lim_x), max(lim_x))
    ),
    yaxis = list(
      title = "Área quemada (ha)",
      tickformat = ",.0f"
    ),
    yaxis2 = list(
      title = list(text = "Precipitación total (mm)", standoff = 16),
      overlaying = "y",
      side = "right",
      tickformat = ".1f",
      automargin = TRUE
    ),
    legend = list(orientation = "h", x = 0, y = 1.15),
    margin = list(t = 90, r = 80, b = 60, l = 60)
  ) |>
  plotly::config(locale = "es", displayModeBar = TRUE)

fig
```

#### Relación lineal entre precipitación y área quemada

```{r}
#| label: significacion-area-vs-precipitacion
#| code-fold: true
#| warning: false
#| message: false

# Paquetes necesarios para errores robustos
suppressWarnings({
  library(lmtest)
  library(sandwich)
  library(knitr)
  library(kableExtra)
})

# --- Unir y alistar datos ---
df <- dplyr::inner_join(
  dplyr::select(incendios_por_anio, anio, area_quemada_total),
  dplyr::select(precipitacion_total_anual, anio, precipitacion),
  by = "anio"
) |>
  dplyr::arrange(anio) |>
  tidyr::drop_na()

# --- Correlaciones ---
pear <- cor.test(df$area_quemada_total, df$precipitacion, method = "pearson")
spear <- cor.test(df$area_quemada_total, df$precipitacion, method = "spearman")

# --- Regresión lineal con SE robustos Newey-West (maneja autocorrelación anual) ---
mod  <- lm(area_quemada_total ~ precipitacion, data = df)

# lag sugerido para NW (regla común)
nw_lag <- max(1L, floor(4 * (nrow(df) / 100)^(2/9)))
ct   <- lmtest::coeftest(mod, vcov = sandwich::NeweyWest(mod, lag = nw_lag, prewhite = TRUE, adjust = TRUE))
beta <- unname(ct["precipitacion", "Estimate"])
se_r <- unname(ct["precipitacion", "Std. Error"])
pval <- unname(ct["precipitacion", "Pr(>|t|)"])
r2   <- summary(mod)$r.squared

# IC 95% (robusto) para la pendiente
z    <- 1.96
ci_l <- beta - z * se_r
ci_u <- beta + z * se_r

# --- Tabla breve de resultados ---
resumen <- tibble::tibble(
  indicador = c("Correlación de Pearson (r)", "Correlación de Spearman (ρ)",
                "Pendiente β (área ~ temp)", "IC95% β", "p-valor (β)", "R² (lineal)"),
  valor     = c(
    sprintf("%.3f (p=%.8f)", pear$estimate, pear$p.value),
    sprintf("%.3f (p=%.8f)", spear$estimate, spear$p.value),
    sprintf("%.3f", beta),
    sprintf("[%.3f, %.3f]", ci_l, ci_u),
    sprintf("%.4g", pval),
    sprintf("%.3f", r2)
  )
)

knitr::kable(
  resumen,
  format   = "html",
  col.names = c("Indicador", "Valor"),
  align    = c("l", "r"),
  caption  = sprintf("Resultados (n = %d; lag Newey–West = %d)", nrow(df), nw_lag)
) |>
  kableExtra::kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position   = "center"
  )
```

```{r}
#| label: scatter-significacion-area-vs-precipitacion
#| code-fold: true
#| warning: false
#| message: false

# --- Scatter con recta de ajuste y anotación de R² y p ---
# datos para la recta
pred_line <- tibble::tibble(
  precipitacion = seq(min(df$precipitacion, na.rm = TRUE),
                    max(df$precipitacion, na.rm = TRUE), length.out = 100)
)
pred_line$area_fit <- predict(mod, newdata = pred_line)

fig_sig <- plotly::plot_ly() |>
  plotly::add_markers(
    data = df,
    x = ~precipitacion, y = ~area_quemada_total,
    name = "Datos",
    hovertemplate = paste0(
      "Año: %{customdata}<br>",
      "Precipitación: %{x:.1f} mm<br>",
      "Área: %{y:,.0f} ha<extra></extra>"
    ),
    customdata = df$anio
  ) |>
  plotly::add_lines(
    data = pred_line,
    x = ~precipitacion, y = ~area_fit,
    name = "Ajuste lineal",
    line = list(dash = "solid", width = 2)
  ) |>
  plotly::layout(
    xaxis  = list(title = "Precipitación total (mm)", tickformat = ".1f"),
    yaxis  = list(title = "Área quemada (ha)", tickformat = ",.0f"),
    legend = list(orientation = "h", x = 0, y = 1.15),
    margin = list(t = 90, r = 40, b = 60, l = 60),
    annotations = list(
      list(
        x = 0.02, y = 0.98, xref = "paper", yref = "paper",
        text = sprintf("R² = %.3f<br>β = %.3f (IC95%% %.3f, %.3f)<br>p = %.4g",
                       r2, beta, ci_l, ci_u, pval),
        showarrow = FALSE, align = "left", bgcolor = "rgba(255,255,255,0.8)",
        bordercolor = "rgba(0,0,0,0.2)", borderwidth = 1, borderpad = 4
      )
    )
  ) |>
  plotly::config(locale = "es", displayModeBar = TRUE)

fig_sig
```

El gráfico anterior muestra que a mayor precipitación, hay menos área quemada. Por cada milímetro adicional de precipitación, se queman en promedio unas 452 hectáreas menos. El rango probable va de 930 hectáreas menos a 25 hectáreas más. El resultado es estadísticamente significativo, pero no tanto como en el caso de la precipitación y el área quemada. La precipitación por sí sola explica alrededor de un 7 % de la variación anual. El resto depende de otros factores climáticos y de gestión.

#### Diferencias entre periodos

```{r}
#| label: comparacion-precipitacion-por-periodo
#| code-fold: true
#| warning: false
#| message: false

# --- Si no existe, construir la serie anual de precipitación (mm/año) -------
if (!exists("precipitacion_promedio_anual")) {
  # Promedio espacial anual por capa del ráster
  vals_p <- drop(terra::global(total_precipitation_12m, mean, na.rm = TRUE)[, 1])
  anios_p <- suppressWarnings(as.integer(names(total_precipitation_12m)))
  if (any(is.na(anios_p))) anios_p <- seq_len(terra::nlyr(total_precipitation_12m))

  # Conversión a mm si el ráster está en metros (heurística simple)
  factor_mm <- if (stats::median(vals_p, na.rm = TRUE) < 10) 1000 else 1
  vals_p_mm <- vals_p * factor_mm

  precipitacion_promedio_anual <-
    tibble::tibble(anio = anios_p, precipitacion_mm = vals_p_mm) |>
    dplyr::arrange(anio)
}

# --- Resumen por periodos ----------------------------------------------------
tabla_periodos_pp <-
  precipitacion_promedio_anual |>
  dplyr::filter(anio >= 1961, anio <= 2024) |>
  dplyr::mutate(
    periodo = dplyr::if_else(anio <= 1990, "1961–1990", "1991–2024")
  ) |>
  dplyr::group_by(periodo) |>
  dplyr::summarise(
    prec_promedio_mm = mean(precipitacion_mm, na.rm = TRUE),  # mm/año promedio del periodo
    n_anios          = dplyr::n(),
    .groups = "drop"
  ) |>
  dplyr::mutate(periodo = factor(periodo, levels = c("1961–1990", "1991–2024"))) |>
  dplyr::arrange(periodo)

# --- Delta absoluto y relativo (reciente − base) -----------------------------
a_p     <- tabla_periodos_pp$prec_promedio_mm[1]
b_p     <- tabla_periodos_pp$prec_promedio_mm[2]
delta_p <- b_p - a_p
pct_p   <- if (is.na(a_p) || a_p == 0) NA_real_ else delta_p / a_p

# --- Gráfico: precipitación total anual promedio por periodo -----------------
plotly::plot_ly(
  data = tabla_periodos_pp,
  x    = ~periodo,
  y    = ~prec_promedio_mm,
  type = "bar",
  text = ~scales::comma(round(prec_promedio_mm, 0)),
  textposition = "outside",
  hovertemplate = paste(
    "<b>%{x}</b><br>",
    "Precipitación prom. anual: %{y:,.0f} mm<br>",
    "Años en el periodo: %{customdata}<extra></extra>"
  ),
  customdata = ~n_anios,
  marker = list(color = col["precipitacion"])
) |>
plotly::layout(
  title = "Precipitación total anual por periodo (promedio anual)",
  yaxis = list(title = "mm/año", tickformat = ",.0f"),
  xaxis = list(title = ""),
  showlegend = FALSE,
  margin = list(t = 80, r = 30, b = 40, l = 70),
  annotations = list(
    list(
      x = 0.5, y = 1.12, xref = "paper", yref = "paper",
      text = paste0(
        "Δ = ", scales::comma(round(delta_p, 0)), " mm",
        if (!is.na(pct_p)) paste0(" (", scales::percent(pct_p, accuracy = 0.1), ")") else ""
      ),
      showarrow = FALSE, font = list(size = 12)
    )
  )
) |>
plotly::config(locale = "es", displayModeBar = FALSE)
```

El gráfico indica una leve disminución de la precipitación media anual entre 1961–1990 y 1991–2024: ~574 → ~555 mm/año, es decir Δ = −19 mm (−3.3 %).

```{r}
#| label: mapas-precipitacion-facets-por-periodo
#| code-fold: true
#| warning: false
#| message: false

# --- 1) Promedios por periodo (mm/año) --------------------------------------
yrs_6190 <- as.character(1961:1990)
yrs_9124 <- as.character(1991:2024)

# Heurística de unidades: ERA5-Land suele venir en metros; si es <10, convertir a mm
muestra_mean <- drop(terra::global(total_precipitation_12m[[1]], mean, na.rm = TRUE)[, 1])
factor_mm    <- if (is.na(muestra_mean)) 1 else if (muestra_mean < 10) 1000 else 1

p_6190 <- terra::app(total_precipitation_12m[[names(total_precipitation_12m) %in% yrs_6190]],
                     mean, na.rm = TRUE) * factor_mm
p_9124 <- terra::app(total_precipitation_12m[[names(total_precipitation_12m) %in% yrs_9124]],
                     mean, na.rm = TRUE) * factor_mm

names(p_6190) <- "1961–1990"
names(p_9124) <- "1991–2024"

r_per_p <- c(p_6190, p_9124)  # stack con 2 capas (una por periodo)

# --- 2) Misma escala de colores en ambos mapas ------------------------------
mm    <- terra::minmax(r_per_p)
rng   <- range(mm, na.rm = TRUE)
brks  <- pretty(rng, n = 9)  # mismos cortes para comparabilidad

# --- 3) Borde de California (contexto) --------------------------------------
if (!exists("ca")) {
  usa <- rnaturalearth::ne_states(country = "United States of America", returnclass = "sf")
  ca  <- subset(usa, name == "California")
}
ca_ll <- sf::st_transform(ca, crs = terra::crs(r_per_p, proj = TRUE))

# --- 4) Mapas lado a lado (facets) ------------------------------------------
tmap_mode("plot")

tm_shape(r_per_p) +
  tm_raster(
    palette = "PuBuGn",        # paleta solicitada
    style   = "fixed",         # cortes fijos => comparables
    breaks  = brks,
    title   = "Prec. promedio (mm/año)"
  ) +
  tm_shape(ca_ll) + tm_borders(col = "#424242", lwd = 0.6) +
  tm_facets(ncol = 2, free.scales = FALSE) +  # misma escala en ambos
  tm_layout(
    legend.outside = TRUE,
    legend.format  = list(text.separator = " a "),
    frame = FALSE
  )
```

```{r}
#| label: mapas-diferencia-precipitacion-facets-estatico-titulos-fuera
#| code-fold: true
#| warning: false
#| message: false

# --- 1) Promedios por periodo (mm/año) y diferencia -------------------------
yrs_6190 <- as.character(1961:1990)
yrs_9124 <- as.character(1991:2024)

# Heurística de unidades (ERA5-Land suele venir en m): convertir a mm si procede
muestra_mean <- drop(terra::global(total_precipitation_12m[[1]], mean, na.rm = TRUE)[, 1])
factor_mm    <- if (is.na(muestra_mean)) 1 else if (muestra_mean < 10) 1000 else 1

p_6190 <- terra::app(total_precipitation_12m[[names(total_precipitation_12m) %in% yrs_6190]],
                     mean, na.rm = TRUE) * factor_mm
p_9124 <- terra::app(total_precipitation_12m[[names(total_precipitation_12m) %in% yrs_9124]],
                     mean, na.rm = TRUE) * factor_mm

dP <- p_9124 - p_6190                        # ΔP (reciente − base)
names(dP) <- "ΔP (mm/año)"

# --- 2) Escala de colores común (simétrica alrededor de 0) ------------------
rng     <- drop(terra::global(dP, range, na.rm = TRUE))
max_abs <- max(abs(rng[1]), abs(rng[2]), na.rm = TRUE)
brks    <- pretty(c(-max_abs, max_abs), n = 9)
brks    <- sort(unique(c(brks, 0)))         # asegurar que 0 esté incluido

# --- 3) Bordes de California y puntos (centroides por Lon/Lat) --------------
if (!exists("ca")) {
  usa <- rnaturalearth::ne_states(country = "United States of America", returnclass = "sf")
  ca  <- subset(usa, name == "California")
}
ca_ll <- sf::st_transform(ca, crs = terra::crs(dP, proj = TRUE))

inc_rec_pts <- incendios |>
  dplyr::mutate(anio = lubridate::year(ALARM_DATE)) |>
  dplyr::filter(anio >= 1991, anio <= 2024, !is.na(Lon), !is.na(Lat)) |>
  sf::st_as_sf(coords = c("Lon", "Lat"), crs = 4326, remove = FALSE) |>
  sf::st_transform(crs = terra::crs(dP, proj = TRUE))

# --- 4) Dos mapas estáticos lado a lado; títulos fuera del mapa -------------
tmap_mode("plot")

outer_top <- 0.10  # margen superior para ubicar títulos fuera del mapa

# Izquierda: solo raster de diferencia con leyenda
m_left <-
  tm_shape(dP) +
  tm_raster(
    palette = "PuBuGn",      # paleta solicitada
    style   = "fixed",
    breaks  = brks,
    title   = "ΔP (mm/año)"
  ) +
  tm_shape(ca_ll) + tm_borders(col = "#424242", lwd = 0.6) +
  tm_credits("ΔP (1991–2024 − 1961–1990)",
             position = c("center", "top"),
             size = 1.1, fontface = "bold") +
  tm_layout(
    legend.outside = TRUE,
    legend.outside.position = "left",
    legend.stack = "vertical",
    outer.margins = c(outer_top, 0.02, 0.02, 0.02),
    frame = FALSE
  )

# Derecha: mismo raster + puntos, sin leyenda
m_right <-
  tm_shape(dP) +
  tm_raster(
    palette = "PuBuGn",
    style   = "fixed",
    breaks  = brks
  ) +
  tm_shape(ca_ll) + tm_borders(col = "#424242", lwd = 0.6) +
  tm_shape(inc_rec_pts) +
  tm_dots(col = "#111111", size = 0.03, alpha = 0.8, legend.show = FALSE) +
  tm_credits("ΔP + incendios (1991–2024)",
             position = c("center", "top"),
             size = 1.1, fontface = "bold") +
  tm_layout(
    legend.outside = TRUE,
    legend.outside.position = "left",
    legend.stack = "vertical",
    outer.margins = c(outer_top, 0.02, 0.02, 0.02),
    frame = FALSE
  )

tmap::tmap_arrange(m_left, m_right, ncol = 2, widths = c(1, 1))
```

Los mapas muestran que la precipitación media anual mantiene su máximo en las montañas costeras del norte y el sector occidental de la Sierra Nevada, mientras que el interior y el sur son más secos. La diferencia entre periodos (ΔP) sugiere un ligero a moderado descenso generalizado (≈−50 a 0 mm/año en amplias zonas) con aumentos locales (≈50–150 mm/año) en sectores puntualesl. Al sobreponer los centroides de incendios recientes, se observa su concentración en cadenas montañosas con vegetación continua.

## Datos poblacionales

### Vulnerabilidad por condados

```{r}
#| label: procesamiento-mapa-vulnerabilidad
#| code-fold: true
#| warning: false
#| message: false
#| results: "hide"
#| echo: false

# 0) Creación de objetos sf por condados. 

#Obtener objeto sf de población total con discapacidad 

ca_dis <- get_acs(
  geography = "county",
  variables =  "S1810_C01_001E", 
  state = "CA",
  year  = 2023,
  survey = "acs5",
  geometry = TRUE
)

#Obtener objeto sf de población total con un nivel de inglés limitado

ca_limeng <- get_acs(
  geography = "county",
  variables =  "S1602_C01_001E", 
  state = "CA",
  year  = 2023,
  survey = "acs5",
  geometry = TRUE
)

#Obtener objeto sf de población de 65 años o más 

ca_elderly <- get_acs(
  geography = "county",
  variables =  "S0101_C01_030E", 
  state = "CA",
  year  = 2023,
  survey = "acs5",
  geometry = TRUE
)

#Obtener objeto sf de población infante (entre 5-14 años)

ca_infant <- get_acs(
  geography = "county",
  variables =  "S0101_C01_020E", 
  state = "CA",
  year  = 2023,
  survey = "acs5",
  geometry = TRUE
)


#Obtener objeto sf de dependencia al medio de tranporte público  

ca_commuting <- get_acs(
  geography = "county",
  variables =  "S0801_C01_001E", 
  state = "CA",
  year  = 2023,
  survey = "acs5",
  geometry = TRUE
)

#Obtener objeto sf de la población total en estado de pobreza 

ca_pobreza <- get_acs(
  geography = "county",
  variables =  "S1701_C03_001E", 
  state = "CA",
  year  = 2023,
  survey = "acs5",
  geometry = TRUE
)

#Obtener objeto sf del ingreso promedio de la población total 

ca_inc <- get_acs(
  geography = "county",
  variables =  "S1901_C01_001E", 
  state = "CA",
  year  = 2023,
  survey = "acs5",
  geometry = TRUE
)


#
# Código adicional para:
# - Obtener la población de cada condado (crear la columna population)
# - Obtener el porcentaje que representa cada variable con respecto a la población
#   (crear la columna pct)
# - Unificar los objetos sf de variables en uno solo
# - Generar un mapa del objeto sf unificado


# 1) Obtener la población total por condado (ACS 5-year 2023)
#    Usamos S0101_C01_001E = Total population (tabla de "subject")
ca_pop <- 
  get_acs(
    geography = "county",
    variables = "S0101_C01_001E",
    state     = "CA",
    year      = 2023,
    survey    = "acs5",
    geometry  = FALSE   # sin geometría para que el join sea más simple
  ) |> select(GEOID, population = estimate)


# 2) Unir 'population' a cada objeto sf por GEOID
ca_dis       <- left_join(ca_dis,       ca_pop, by = "GEOID")
ca_limeng    <- left_join(ca_limeng,    ca_pop, by = "GEOID")
ca_elderly   <- left_join(ca_elderly,   ca_pop, by = "GEOID")
ca_infant    <- left_join(ca_infant,    ca_pop, by = "GEOID")
ca_commuting <- left_join(ca_commuting, ca_pop, by = "GEOID")
ca_pobreza   <- left_join(ca_pobreza,   ca_pop, by = "GEOID")
ca_inc       <- left_join(ca_inc,       ca_pop, by = "GEOID")


# 3) Crear la columna pct = estimate / population (cuando estimate es una cantidad de personas)
#    o pct = estimate (cuando estimate es un porcentaje)
# Se define el modo por defecto y una función para crear 'pct'
#    - "ratio": pct = estimate / population 
#    - "copy" : pct = estimate
pct_mode_default <- "ratio"

add_pct <- function(x, mode = pct_mode_default) {
  if (!"population" %in% names(x)) stop("Falta la columna 'population'.")
  if (!"estimate"   %in% names(x)) stop("Falta la columna 'estimate'.")
  
  if (mode == "ratio") {
    # Evitar división por cero o NA en 'population'
    x$pct <- with(
      x,
      ifelse(is.na(population) | population == 0, NA_real_, estimate / population * 100)
    )
  } else if (mode == "copy") {
    x$pct <- x$estimate
  } else {
    stop("El modo debe ser 'ratio' o 'copy'.")
  }
  x
}


# 4) Crear la columna 'pct' en cada objeto
ca_dis       <- add_pct(ca_dis)             # ratio
ca_limeng    <- add_pct(ca_limeng)          # ratio
ca_elderly   <- add_pct(ca_elderly)         # ratio
ca_infant    <- add_pct(ca_infant)          # ratio
ca_commuting <- add_pct(ca_commuting)       # ratio
ca_pobreza   <- add_pct(ca_pobreza, "copy") # copy (para que conserve el valor de estimate en pct)
ca_inc       <- add_pct(ca_inc)             # ratio


# 5) Elegir cuáles objetos sf incluir en el promedio de 'pct'
variables_incluir <- c(
  "ca_dis",
  "ca_limeng",
  "ca_elderly",
  "ca_infant",
  "ca_commuting", 
  "ca_pobreza", 
  "ca_inc"
)


# 6) Unificar en un solo sf:
#    - Tomamos el primero como base (para NAME y geometry)
#    - Vamos uniendo (left_join por GEOID) el 'pct' de los demás
#    - Guardamos cada 'pct' con nombre único: pct_<nombre_objeto>
stopifnot(length(variables_incluir) >= 1)

primero <- variables_incluir[1]
base_sf <- get(primero) |>
  select(GEOID, NAME, geometry, pct) |>
  rename(!!paste0("pct_", primero) := pct)

# Unir los demás objetos seleccionados
if (length(variables_incluir) > 1) {
  for (obj in variables_incluir[-1]) {
    tmp <- get(obj) |>
      st_drop_geometry() |>
      select(GEOID, !!paste0("pct_", obj) := pct)
    base_sf <- left_join(base_sf, tmp, by = "GEOID")
  }
}


# 7) Calcular el promedio de 'pct' por condado (ignorando NA) y dejar columnas finales
pct_cols <- names(base_sf)[startsWith(names(base_sf), "pct_")]

# Forzar a numérico (por si alguna llegó como carácter/factor)
# base_sf[pct_cols] <- lapply(base_sf[pct_cols], function(v) as.numeric(v))

# Calcular promedio de pct ignorando NA
base_sf$pct <- rowMeans(as.data.frame(st_drop_geometry(base_sf[pct_cols])), na.rm = TRUE)

ca_unificado <- base_sf |>
  select(GEOID, NAME, pct, geometry)
```

```{r}
#| label: mapa-vulnerabilidad
#| code-fold: true
#| warning: false
#| message: false

# 8) Mapa interactivo
tmap_mode("view")

tm_shape(ca_unificado, name = "Población vulnerable") +
  tm_polygons(
    col = "pct",
    id  = "NAME",  # nombre del condado en el tooltip
    palette = "OrRd",
    style = "quantile",
    n = 5,
    alpha = 0.8,
    legend.format = list(suffix = " %", digits = 1),
    popup.vars = c(
      "Condado" = "NAME",
      "Población vulnerable" = "pct"
    ),
    title = "Población vulnerable"
  ) +
  tm_borders(col = "white", lwd = 0.5)
```
